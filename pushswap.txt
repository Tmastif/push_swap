00001111
76543210

x >> (4+1-3)
x >> 2

& ~(~0 << 3)


(0,0)^2 + 


pass 2 nums from a to b

every node in a - determine where to push to b:

target_node will be node that will be under the pushed node

if new node is gonna be maximum or minimum of b:
above old maximum (so old maximum is target node)

if its neither max or min:
find nearest smallest number
(of 6 its 5) and place it above
so the max that is still smaller is target node.

now we have target node


calculate price of push:
for every node of a:
+ price of transfering to the top
+ price of transfering target node to the top
- duplicte movements

set index for a and b




